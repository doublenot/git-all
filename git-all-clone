#!/bin/sh

gitClone=".gitclone";
bldblk='\033[1;30m'; # Black - Bold
red='\033[0;31m'; # Red - Bold
bldred='\033[1;31m'; # Red - Bold
bldgrn='\033[1;32m'; # Green - Bold
bldylw='\033[1;33m'; # Yellow - Bold
bldblu='\033[1;34m'; # Blue - Bold
mgt='\033[0;35m'; # Magenta - Bold
bldcyn='\033[1;36m'; # Cyan - Bold
bldwht='\033[1;37m'; # White - Bold
txtrst='\033[0m';    # Text Reset

if [ "${key}" == "-h" ]; then
  echo "";
  echo "\tUsage: ${mgt}git-all-clone${txtrst}";
  echo "";
  exit 0;
fi;

for repo in $(< ${gitClone}); do
  IFS=',' read -a skipCheck -n 1 <<< "${repo}";
  if [ "${skipCheck}" != "#" ]; then
    IFS=',' read -a cloneArray <<< "${repo}";
    if [ ! "${cloneArray[1]}" ]; then
      IFS='/' read -a cloneArray <<< "${repo}";
      dir="${cloneArray[@]: -1:1}";
      IFS='.' read -a dirArray <<< "${dir}";
      dir="${dirArray[0]}";
    else
      dir="${cloneArray[1]}";
    fi;
    if [ -d "${dir}" ]; then
      echo "";
      echo "============================";
      echo "${bldylw}Directory exists:${txtrst} ${bldcyn}${dir}${txtrst} for repo: ${bldgrn}${repo}${txtrst}";
      echo "----------------------------";
      echo "";
    else
      echo "";
      echo "============================";
      echo "${bldgrn}Cloning repo:${txtrst} ${bldcyn}${repo}${txtrst} ${bldgrn}into${txtrst} ${bldylw}${dir}${txtrst}";
      echo "";
      git clone "${repo}" "${dir}";
      echo "";
      echo "----------------------------";
      echo "";
    fi;
  else
    IFS='#' read -a repoUrl <<< "${repo}"
    echo "";
    echo "============================";
    echo "${red}Skipping repo:${txtrst} ${bldcyn}${repoUrl[@]: -1:1}${txtrst}";
    echo "----------------------------";
    echo "";
  fi;
done;
