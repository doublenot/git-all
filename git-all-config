#!/bin/sh

key=${1};
value=${2};
flag="";
bldblk='\033[1;30m'; # Black - Bold
red='\033[0;31m'; # Red - Bold
bldred='\033[1;31m'; # Red - Bold
bldgrn='\033[1;32m'; # Green - Bold
bldylw='\033[1;33m'; # Yellow - Bold
bldblu='\033[1;34m'; # Blue - Bold
mgt='\033[0;35m'; # Magenta - Bold
bldcyn='\033[1;36m'; # Cyan - Bold
bldwht='\033[1;37m'; # White - Bold
txtrst='\033[0m';    # Text Reset

if [ "${key}" == "-h" ]; then
  echo "";
  echo "\tUsage: ${mgt}git-all-config <key> <value>${txtrst}";
  echo "";
  echo "\t${bldylw}Commands:${txtrst}";
  echo "\t\t${bldgrn}-d${txtrst}       Remove all the settings for ${mgt}<key>${txtrst}";
  echo "";
  exit 0;
elif [ "${key}" == "-d" ]; then
  flag=${key};
  key=${value};
  if [ "${key}" == "" ]; then
    echo "";
    echo "\t${red}Error: requires a key to remove${txtrst}";
    echo "";
    exit 1;
  fi;
fi;

for dir in $(ls -d ./*); do
  if [ -d "${dir}" ]; then
    cd ${dir};
    if [ "${flag}" == "-d" ]; then
      echo "";
      echo "============================";
      echo "${red}Removing all settings:${txtrst} ${bldcyn}${key}${txtrst}";
      git config --unset-all ${key};
      echo "";
      echo "----------------------------";
      echo "";
    else
      exists=`git config --get ${key}`;
      if [ "${exists}" != "" ]; then
        echo "";
        echo "============================";
        echo "${red}Skipping setting${txtrst} ${bldcyn}${key}${txtrst}${red}, it already exists:${txtrst} ${bldylw}${exists}${txtrst}";
        echo "----------------------------";
        echo "";
      else
        echo "";
        echo "============================";
        echo "${bldgrn}Configuring setting:${txtrst} ${bldcyn}${key}${txtrst} ${bldgrn}to${txtrst} ${bldylw}\"${value}\"${txtrst}";
        git config --add ${key} "${value}";
        echo "";
        echo "----------------------------";
        echo "";
      fi;
    fi;
    cd ../;
  fi;
done;
